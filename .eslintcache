[{"D:\\developWorkspace\\webStorm\\exam_web\\src\\index.js":"1","D:\\developWorkspace\\webStorm\\exam_web\\src\\reportWebVitals.js":"2","D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\api.js":"3","D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\server.js":"4","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\Login.js":"5","D:\\developWorkspace\\webStorm\\exam_web\\src\\router.js":"6","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\CustomerManage.js":"7","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\CustomerMenu.js":"8","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\PaperManage.js":"9"},{"size":487,"mtime":1607180553937,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1607167004055,"results":"12","hashOfConfig":"11"},{"size":887,"mtime":1607271816092,"results":"13","hashOfConfig":"11"},{"size":4429,"mtime":1607186152325,"results":"14","hashOfConfig":"11"},{"size":3150,"mtime":1607184155112,"results":"15","hashOfConfig":"11"},{"size":751,"mtime":1607188345919,"results":"16","hashOfConfig":"11"},{"size":1225,"mtime":1607274852110,"results":"17","hashOfConfig":"11"},{"size":7732,"mtime":1607274100127,"results":"18","hashOfConfig":"11"},{"size":395,"mtime":1607271664855,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18yvpz5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\developWorkspace\\webStorm\\exam_web\\src\\index.js",[],["42","43"],"D:\\developWorkspace\\webStorm\\exam_web\\src\\reportWebVitals.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\api.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\server.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\Login.js",["44","45"],"import React, {Component} from 'react';\r\nimport {Input, Button, Icon} from 'antd';\r\nimport '../css/Login.css';\r\nimport logo from \"../res/logo.svg\";\r\nimport {login} from \"../utils/api\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employCode: null,\r\n            passWord: null,\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = '登录'\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        this.setState({loading: true});\r\n        const {employCode, passWord} = this.state;\r\n        login({employCode, passWord}).then(\r\n            (res) => {\r\n                console.log(res)\r\n                this.setState({loading: false})\r\n                global.name = res.name;\r\n                global.employCode = res.employCode;\r\n                this.props.history.replace('CustomerMenu')\r\n            },\r\n            () => {\r\n                this.setState({loading: false})\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const {employCode, passWord, loading} = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                    <Input\r\n                        disabled={loading}\r\n                        placeholder=\"请输入工号\"\r\n                        allowClear\r\n                        prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.30)'}}/>}\r\n                        value={employCode}\r\n                        onChange={(e) => this.setState({employCode: e.currentTarget.value})}\r\n                        style={{color: \"#555555\", fontSize: 14}}\r\n                    />\r\n                    <Input type=\"password\"\r\n                           disabled={loading}\r\n                           allowClear\r\n                           placeholder=\"请输入密码\"\r\n                           prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                           value={passWord}\r\n                           onChange={(e) => this.setState({passWord: e.currentTarget.value})}\r\n                           style={{marginTop: 10}}\r\n                    />\r\n                    <span className=\"Span-input\">\r\n                        <a href=\"\" style={{marginRight: 50, color: \"#8a8a8a\", fontSize: 14}}>忘记密码</a>\r\n                        <a href=\"\" style={{color: \"#8a8a8a\", fontSize: 14}}>注册!</a>\r\n                    </span>\r\n\r\n                    <Button type=\"primary\"\r\n                            block\r\n                            className=\"login-form-button\"\r\n                            onClick={this.handleSubmit.bind(this)}\r\n                            loading={this.state.loading}\r\n                    >\r\n                        登录\r\n                    </Button>\r\n\r\n                </div>\r\n                <a href=\"http://beian.miit.gov.cn/\" target=\"_blank\" rel=\"noreferrer\"\r\n                   style={{color: \"#555555\", fontSize: 14}}>沪ICP备2020035082号-1</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","D:\\developWorkspace\\webStorm\\exam_web\\src\\router.js",["46","47"],"import React from 'react'\r\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom'\r\nimport { createBrowserHistory } from \"history\";\r\nimport Login from \"./components/Login\";\r\nimport {CustomerMenu} from \"./components/CustomerMenu\";\r\nimport CustomerManage from \"./components/CustomerManage\";\r\nimport PaperManage from \"./components/PaperManage\";\r\n\r\n\r\n\r\nexport default class AppRoute extends React.Component{\r\n    render(){\r\n        return(\r\n            <Router history={createBrowserHistory}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Login}/>\r\n                    <Route exact path=\"/CustomerMenu\" component={CustomerMenu} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\CustomerManage.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\CustomerMenu.js",["48","49","50","51"],"import React, {Component} from \"react\";\r\nimport '../css/CustomerMenu.css';\r\nimport {getMenus} from \"../utils/api\";\r\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport {Layout, Menu, Spin, Breadcrumb, Icon, Dropdown, message} from 'antd';\r\nimport CustomerManage from \"./CustomerManage\";\r\nimport PaperManage from \"./PaperManage\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst {Header, Content, Footer, Sider} = Layout;\r\nconst menu = (\r\n    <Menu onClick={handleUserMenuClick}>\r\n        <Menu.Item key=\"1\">\r\n            <Icon type=\"unlock\"/>\r\n            修改密码\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n            <Icon type=\"export\"/>\r\n            退出登录\r\n        </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\nfunction handleUserMenuClick(e) {\r\n    if (e.key === \"1\") {\r\n        message.info(\"修改密码\");\r\n    } else {\r\n        message.info(\"退出登录\");\r\n    }\r\n\r\n    console.log('click', e);\r\n}\r\n\r\nexport class CustomerMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            menuList: [],\r\n            theme: 'green',\r\n            current: '0',\r\n            defaultOpen: '0',\r\n            current_icon: 'home',\r\n            current_name: 'home',\r\n            collapsed: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = '欢迎';\r\n        getMenus({employCode: global.employCode, menuType: \"2\"}).then(\r\n            (res) => {\r\n                if(res != null && res.length > 0){\r\n                    this.setState({\r\n                        defaultOpen: res[0].id + \"\",\r\n                    });\r\n                    if (res[0].subMenus != null && res[0].subMenus.length > 0) {\r\n                        this.setState({\r\n                            current: res[0].subMenus[0].id + \"\",\r\n                            current_icon: res[0].subMenus[0].icon,\r\n                            current_name: res[0].subMenus[0].name\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            current: res[0].id + \"\",\r\n                            current_icon: res[0].icon,\r\n                            current_name: res[0].name\r\n                        });\r\n                    }\r\n                }\r\n                this.setState({loading: false, menuList: res})\r\n            },\r\n            () => {\r\n                this.setState({loading: false})\r\n            }\r\n        );\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({collapsed});\r\n    };\r\n\r\n    handleClick = e => {\r\n        const {menuList} = this.state\r\n        let curMenu = {}\r\n        menuList.map((s, index) => {\r\n            if(s.id + \"\" === e.key){\r\n                curMenu = s\r\n            }\r\n            if (s.subMenus != null && s.subMenus.length > 0) {\r\n                s.subMenus.map((sub, subIndex) => {\r\n                    if(sub.id + \"\" === e.key){\r\n                        curMenu = sub\r\n                    }\r\n                })\r\n            }\r\n        });\r\n        this.setState({\r\n            current: e.key,\r\n            current_icon: curMenu.icon,\r\n            current_name: curMenu.name\r\n        });\r\n        console.log(e)\r\n    };\r\n\r\n    handleUserClick = e => {\r\n        message.info(\"个人信息\");\r\n    };\r\n\r\n    menuList = (menus) => {\r\n        return (\r\n            <Menu\r\n                className=\"menu\"\r\n                mode=\"inline\"\r\n                theme={this.state.theme}\r\n                selectedKeys={[this.state.current]}\r\n                defaultOpenKeys={['7']}\r\n                onClick={this.handleClick}\r\n            >\r\n\r\n                {menus.map((s, index) => {\r\n                    if (s.subMenus != null && s.subMenus.length > 0) {\r\n                        const subMenus = s.subMenus\r\n                        return (\r\n\r\n                            <SubMenu\r\n                                key={s.id}\r\n                                title={<span><Icon type={s.icon ? s.icon : \"home\" }/><span>{s.name}</span></span>}\r\n                            >\r\n                                {subMenus.map((sub, subIndex) => {\r\n                                   return <Menu.Item key={sub.id}>\r\n                                        <Link to={sub.className}>\r\n                                            <Icon type={sub.icon ? sub.icon : \"file\" }/>\r\n                                            <span>{sub.name}</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                })\r\n                                }\r\n                            </SubMenu>\r\n\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <Menu.Item key={s.id}>\r\n                                <Link to={s.className}>\r\n                                    <Icon type={s.icon ? s.icon : \"home\" }/>\r\n                                    <span>{s.name}</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        )\r\n                    }\r\n                })}\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {loading, menuList, current_icon, current_name, collapsed} = this.state\r\n\r\n        if (loading) {\r\n            return <Spin size=\"large\" tip=\"Loading...\">\r\n                <div className=\"loading\"/>\r\n            </Spin>\r\n        } else {\r\n            return <Router>\r\n                <Layout className=\"root\">\r\n                    <Sider className=\"sider\"\r\n                           collapsible collapsed={this.state.collapsed}\r\n                           onCollapse={this.onCollapse}\r\n                           width={180}\r\n                    >\r\n                        <div className=\"logo\">\r\n                            <Icon type=\"profile\" style={{\r\n                            color: 'rgba(255,255,255,1)',\r\n                            display: this.state.collapsed ? 'none' : 'block'\r\n                        }}/>\r\n                            <span style={{\r\n                                color: \"#ffffff\",\r\n                                fontSize: this.state.collapsed ? 10 : 15,\r\n                                marginLeft: 5\r\n                            }}>平煤考试系统</span>\r\n                        </div>\r\n                        {this.menuList(menuList)}\r\n                    </Sider>\r\n                    <Layout style={{marginLeft: collapsed? 80 :180,transitionProperty: \"marginLeft\", transitionDuration : 3}}>\r\n                        <div className=\"header\">\r\n                            <div className=\"crumb\"><Icon type={current_icon ? current_icon : \"home\" }/> {current_name}</div>\r\n                            <div className=\"button-head\">\r\n                                <Dropdown.Button overlay={menu} icon={<Icon type=\"user\"/>}\r\n                                                 onClick={this.handleUserClick}>\r\n                                    {global.name}\r\n                                </Dropdown.Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Content className=\"content\">\r\n\r\n                            <div className=\"route\">\r\n                                <Route exact key=\"1\" path=\"/CustomerManage\" component={CustomerManage}/>\r\n                                <Route exact key=\"2\" path=\"/PaperManage\" component={PaperManage}/>\r\n                            </div>\r\n\r\n                        </Content>\r\n                        <Footer className=\"footer\">EXAM ©2020 Created by HRN</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            </Router>\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","D:\\developWorkspace\\webStorm\\exam_web\\src\\components\\PaperManage.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":64,"column":25,"nodeType":"58","endLine":64,"endColumn":94},{"ruleId":"56","severity":1,"message":"57","line":65,"column":25,"nodeType":"58","endLine":65,"endColumn":77},{"ruleId":"59","severity":1,"message":"60","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":22},{"ruleId":"59","severity":1,"message":"63","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":19},{"ruleId":"59","severity":1,"message":"64","line":5,"column":29,"nodeType":"61","messageId":"62","endLine":5,"endColumn":39},{"ruleId":"59","severity":1,"message":"65","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":87,"column":33,"nodeType":"68","messageId":"69","endLine":87,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":92,"column":48,"nodeType":"68","messageId":"69","endLine":92,"endColumn":50},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'CustomerManage' is defined but never used.","Identifier","unusedVar","'PaperManage' is defined but never used.","'Breadcrumb' is defined but never used.","'Header' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]