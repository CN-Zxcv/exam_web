[{"D:\\developWorkspace\\webStorm\\exam_web\\src\\index.js":"1","D:\\developWorkspace\\webStorm\\exam_web\\src\\reportWebVitals.js":"2","D:\\developWorkspace\\webStorm\\exam_web\\src\\App.js":"3","D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\api.js":"4","D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\server.js":"5"},{"size":517,"mtime":1607093218387,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1607093218388,"results":"8","hashOfConfig":"7"},{"size":2789,"mtime":1607093218386,"results":"9","hashOfConfig":"7"},{"size":319,"mtime":1607093218389,"results":"10","hashOfConfig":"7"},{"size":3739,"mtime":1607093218390,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wpxkk2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\developWorkspace\\webStorm\\exam_web\\src\\index.js",[],["24","25"],"D:\\developWorkspace\\webStorm\\exam_web\\src\\reportWebVitals.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\App.js",["26","27"],"import React, {Component} from 'react';\r\nimport {Input, Button, Icon} from 'antd';\r\nimport './App.css';\r\nimport logo from \"./logo.svg\";\r\nimport {login} from \"./utils/api\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employCode : null,\r\n      passWord : null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = '登录'\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    this.setState({loading: true});\r\n    const {employCode, passWord} = this.state;\r\n    let _this = this;\r\n    login({employCode, passWord}).then(\r\n        (res) => {\r\n            console.log(res)\r\n            _this.setState({loading: false})\r\n            global.name = res.name;\r\n            global.employCode = res.employCode;\r\n            _this.props.history.push(`CustomerMenu`)\r\n        },\r\n        () => {\r\n            _this.setState({loading: false})\r\n        }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {employCode, passWord, loading} = this.state;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <Input\r\n                disabled={loading}\r\n                placeholder=\"请输入工号\"\r\n                allowClear\r\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.30)' }} />}\r\n                value={employCode}\r\n                onChange={(e) => this.setState({employCode: e.currentTarget.value})}\r\n                style={{color: \"#555555\", fontSize : 14}}\r\n            />\r\n            <Input type=\"password\"\r\n                   disabled={loading}\r\n                   allowClear\r\n                   placeholder=\"请输入密码\"\r\n                   prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                   value={passWord}\r\n                   onChange={(e) => this.setState({passWord: e.currentTarget.value})}\r\n                   style={{marginTop : 10}}\r\n            />\r\n            <span className=\"Span-input\">\r\n                        <a href=\"\" style={{marginRight : 50, color: \"#8a8a8a\", fontSize : 14}}>忘记密码</a>\r\n                        <a href=\"\" style={{color: \"#8a8a8a\", fontSize : 14}}>注册!</a>\r\n                    </span>\r\n\r\n            <Button type=\"primary\"\r\n                    block\r\n                    className=\"login-form-button\"\r\n                    onClick={this.handleSubmit.bind(this)}\r\n                    loading={this.state.loading}\r\n            >\r\n              登录\r\n            </Button>\r\n\r\n          </header>\r\n          <a href=\"http://beian.miit.gov.cn/\" target=\"_blank\" rel=\"noreferrer\" style={{color: \"#555555\", fontSize : 14}}>沪ICP备2020035082号-1</a>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\api.js",[],"D:\\developWorkspace\\webStorm\\exam_web\\src\\utils\\server.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":66,"column":25,"nodeType":"34","endLine":66,"endColumn":96},{"ruleId":"32","severity":1,"message":"33","line":67,"column":25,"nodeType":"34","endLine":67,"endColumn":78},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]