[{"D:\\zjc\\exam_web\\src\\index.js":"1","D:\\zjc\\exam_web\\src\\App.js":"2","D:\\zjc\\exam_web\\src\\reportWebVitals.js":"3","D:\\zjc\\exam_web\\src\\utils\\api.js":"4","D:\\zjc\\exam_web\\src\\utils\\server.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2703,"mtime":1607072813536,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":319,"mtime":1607071032048,"results":"10","hashOfConfig":"7"},{"size":3739,"mtime":1607072525606,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"86kogw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\zjc\\exam_web\\src\\index.js",[],["24","25"],"D:\\zjc\\exam_web\\src\\App.js",["26","27"],"import React, {Component} from 'react';\nimport {Input, Button, Icon} from 'antd';\nimport './App.css';\nimport logo from \"./logo.svg\";\nimport {login} from \"./utils/api\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      employCode : null,\n      passWord : null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    document.title = '登录'\n  }\n\n  handleSubmit = e => {\n    this.setState({loading: true});\n    const {employCode, passWord} = this.state;\n    let _this = this;\n    login({employCode, passWord}).then(\n        (res) => {\n            console.log(res)\n            _this.setState({loading: false})\n            global.name = res.name;\n            global.employCode = res.employCode;\n            _this.props.history.push(`CustomerMenu`)\n        },\n        () => {\n            _this.setState({loading: false})\n        }\n    );\n  };\n\n  render() {\n    const {employCode, passWord, loading} = this.state;\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Input\n                disabled={loading}\n                placeholder=\"请输入工号\"\n                allowClear\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.30)' }} />}\n                value={employCode}\n                onChange={(e) => this.setState({employCode: e.currentTarget.value})}\n                style={{color: \"#555555\", fontSize : 14}}\n            />\n            <Input type=\"password\"\n                   disabled={loading}\n                   allowClear\n                   placeholder=\"请输入密码\"\n                   prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                   value={passWord}\n                   onChange={(e) => this.setState({passWord: e.currentTarget.value})}\n                   style={{marginTop : 10}}\n            />\n            <span className=\"Span-input\">\n                        <a href=\"\" style={{marginRight : 50, color: \"#8a8a8a\", fontSize : 14}}>忘记密码</a>\n                        <a href=\"\" style={{color: \"#8a8a8a\", fontSize : 14}}>注册!</a>\n                    </span>\n\n            <Button type=\"primary\"\n                    block\n                    className=\"login-form-button\"\n                    onClick={this.handleSubmit.bind(this)}\n                    loading={this.state.loading}\n            >\n              登录\n            </Button>\n\n          </header>\n          <a href=\"http://beian.miit.gov.cn/\" target=\"_blank\" rel=\"noreferrer\" style={{color: \"#555555\", fontSize : 14}}>沪ICP备2020035082号-1</a>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\zjc\\exam_web\\src\\reportWebVitals.js",[],"D:\\zjc\\exam_web\\src\\utils\\api.js",[],"D:\\zjc\\exam_web\\src\\utils\\server.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":66,"column":25,"nodeType":"34","endLine":66,"endColumn":96},{"ruleId":"32","severity":1,"message":"33","line":67,"column":25,"nodeType":"34","endLine":67,"endColumn":78},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]